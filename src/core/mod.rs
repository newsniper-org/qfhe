pub mod quaternion;
pub use crate::core::quaternion::Quaternion;

pub mod polynomial;
pub use crate::core::polynomial::Polynomial;

pub mod keys;
pub use crate::core::keys::{SecretKey, RelinearizationKey, KeySwitchingKey, BootstrapKey};

pub(crate) mod wide_arith;
pub(crate) use crate::core::wide_arith::WideningArith;

use crate::ntt::{power, primitive_root, BarrettReducer};

/// C FFI에서 사용할 보안 수준 열거형입니다.
#[repr(C)]
pub enum SecurityLevel {
    L128,
    L160,
    L192,
    L224,
    L256,
}

/// 미리 계산된 NTT 관련 파라미터를 저장하는 구조체
#[derive(Debug, Clone)]
pub struct NttParameters {
    pub w_primitive: u128,
    pub w_inv_primitive: u128,
    pub twiddle_lut_n1: &'static [u128],
    pub twiddle_lut_n2: &'static [u128],
    pub inv_twiddle_lut_n1: &'static [u128],
    pub inv_twiddle_lut_n2: &'static [u128],
}

const L128_NTT_PARAMS: NttParameters = NttParameters {
    w_primitive: 68238162691450256,
    w_inv_primitive: 707747518257109193,
    twiddle_lut_n1: &[
        1u128,
        25017388715326616,
        877566613137850785,
        167065807712642892,
        1063541393214959123,
        536855014759409233,
        988726846750308244,
        818944417276183255,
        253318182038821466,
        671898717150467829,
        722492176671381643,
        461512722015756816,
        571843286671546493,
        130480460786295434,
        909893501151584214,
        1145432173464424582,
        209276529950938875,
        495747793280720379,
        62454490476896109,
        674032413113887375,
        1053549141930059523,
        239415549171767913,
        1035381016340452968,
        297830362629387612,
        552186331429565339,
        991757886625437941,
        952194754431318978,
        498922298576153753,
        293476705681521219,
        673538551791117506,
        906471270074604407,
        227012187118954963
    ],
    twiddle_lut_n2: &[
        1u128,
        25017388715326616,
        877566613137850785,
        167065807712642892,
        1063541393214959123,
        536855014759409233,
        988726846750308244,
        818944417276183255,
        253318182038821466,
        671898717150467829,
        722492176671381643,
        461512722015756816,
        571843286671546493,
        130480460786295434,
        909893501151584214,
        1145432173464424582,
        209276529950938875,
        495747793280720379,
        62454490476896109,
        674032413113887375,
        1053549141930059523,
        239415549171767913,
        1035381016340452968,
        297830362629387612,
        552186331429565339,
        991757886625437941,
        952194754431318978,
        498922298576153753,
        293476705681521219,
        673538551791117506,
        906471270074604407,
        227012187118954963
    ],
    inv_twiddle_lut_n1: &[
        1u128,
        432250599582891941,
        938239279642812654,
        56790419615278814,
        947050706287207872,
        1116132869141332049,
        66926836421911918,
        20242515811297407,
        469189956797630699,
        572853524867295283,
        930677484019448298,
        550090265619592012,
        554772660496432228,
        886861109560979629,
        940035547400805996,
        830453597379959258,
        953421715170894644,
        1012202642159003004,
        400652359789158121,
        561062434682391708,
        244769106743045096,
        811831906784885866,
        807965682359160736,
        371564949541783671,
        574933079350361943,
        816019988770395875,
        435749046797457902,
        11083103793975577,
        152980794391375071,
        371904812749482526,
        1049105439017390674,
        1046114989180861488
    ],
    inv_twiddle_lut_n2: &[
        1u128,
        432250599582891941,
        938239279642812654,
        56790419615278814,
        947050706287207872,
        1116132869141332049,
        66926836421911918,
        20242515811297407,
        469189956797630699,
        572853524867295283,
        930677484019448298,
        550090265619592012,
        554772660496432228,
        886861109560979629,
        940035547400805996,
        830453597379959258,
        953421715170894644,
        1012202642159003004,
        400652359789158121,
        561062434682391708,
        244769106743045096,
        811831906784885866,
        807965682359160736,
        371564949541783671,
        574933079350361943,
        816019988770395875,
        435749046797457902,
        11083103793975577,
        152980794391375071,
        371904812749482526,
        1049105439017390674,
        1046114989180861488
    ]
};

const L160_NTT_PARAMS: NttParameters = NttParameters {
    w_primitive: 1089679529145525629180,
    w_inv_primitive: 95788525767978893246,
    twiddle_lut_n1: &[
        1u128,
        833607598996177066645,
        698480220721600386235,
        926128179468333972340,
        623628331678733045479,
        382939459446625782856,
        1154897629454592998932,
        115771835555968642315,
        408369585962948001943,
        729384347594303327224,
        510275176922080818766,
        684676135201808917861,
        962258719211998029493,
        546450878795363416348,
        697748091946022767486,
        864049756336761841012,
        456904345708204466491,
        822017655558762683230,
        506678682655310616265,
        717781278937001754982,
        1100923392228977331796,
        474658986211977066226,
        1103965240376623546252,
        1053870416855138338996,
        93812853048317556715,
        1030961874582964501948,
        166018678858597159519,
        988601943910865097232,
        1107074343252625716079,
        173837177482820888983,
        312311008449536504002,
        657343512526744252243
    ],
    twiddle_lut_n2: &[
        1u128,
        833607598996177066645,
        698480220721600386235,
        926128179468333972340,
        623628331678733045479,
        382939459446625782856,
        1154897629454592998932,
        115771835555968642315,
        408369585962948001943,
        729384347594303327224,
        510275176922080818766,
        684676135201808917861,
        962258719211998029493,
        546450878795363416348,
        697748091946022767486,
        864049756336761841012,
        456904345708204466491,
        822017655558762683230,
        506678682655310616265,
        717781278937001754982,
        1100923392228977331796,
        474658986211977066226,
        1103965240376623546252,
        1053870416855138338996,
        93812853048317556715,
        1030961874582964501948,
        166018678858597159519,
        988601943910865097232,
        1107074343252625716079,
        173837177482820888983,
        312311008449536504002,
        657343512526744252243
    ],
    inv_twiddle_lut_n1: &[
        1u128,
        55137488552566553134,
        782963558044329031162,
        1086451564728023547901,
        543708174403453623763,
        200872111267553793739,
        559516392134303118043,
        555898443033282244666,
        8986619899395396391,
        374468291126457044155,
        1008349527882598588468,
        312467338881068633725,
        676862840789297011873,
        710655141875628378397,
        1058415708288630121519,
        436262533892734885315,
        13825249782211146280,
        301996187385671832043,
        125322492049107508453,
        995334082845451055356,
        1077043977244466917093,
        982688262899198897383,
        448997909481673864258,
        960720533477247529702,
        1177333212293188087105,
        481748644861166755612,
        855004029534859836457,
        752636359703000412619,
        216187178556424128835,
        549273415875182568901,
        368933670375090598801,
        373166617932970114210
    ],
    inv_twiddle_lut_n2: &[
        1u128,
        55137488552566553134,
        782963558044329031162,
        1086451564728023547901,
        543708174403453623763,
        200872111267553793739,
        559516392134303118043,
        555898443033282244666,
        8986619899395396391,
        374468291126457044155,
        1008349527882598588468,
        312467338881068633725,
        676862840789297011873,
        710655141875628378397,
        1058415708288630121519,
        436262533892734885315,
        13825249782211146280,
        301996187385671832043,
        125322492049107508453,
        995334082845451055356,
        1077043977244466917093,
        982688262899198897383,
        448997909481673864258,
        960720533477247529702,
        1177333212293188087105,
        481748644861166755612,
        855004029534859836457,
        752636359703000412619,
        216187178556424128835,
        549273415875182568901,
        368933670375090598801,
        373166617932970114210
    ]
};

const L192_NTT_PARAMS: NttParameters = NttParameters {
    w_primitive: 1089679529145525629180,
    w_inv_primitive: 95788525767978893246,
    twiddle_lut_n1: &[
        1u128,
        833607598996177066645,
        698480220721600386235,
        926128179468333972340,
        623628331678733045479,
        382939459446625782856,
        1154897629454592998932,
        115771835555968642315,
        408369585962948001943,
        729384347594303327224,
        510275176922080818766,
        684676135201808917861,
        962258719211998029493,
        546450878795363416348,
        697748091946022767486,
        864049756336761841012,
        456904345708204466491,
        822017655558762683230,
        506678682655310616265,
        717781278937001754982,
        1100923392228977331796,
        474658986211977066226,
        1103965240376623546252,
        1053870416855138338996,
        93812853048317556715,
        1030961874582964501948,
        166018678858597159519,
        988601943910865097232,
        1107074343252625716079,
        173837177482820888983,
        312311008449536504002,
        657343512526744252243
    ],
    twiddle_lut_n2: &[
        1u128,
        833607598996177066645,
        698480220721600386235,
        926128179468333972340,
        623628331678733045479,
        382939459446625782856,
        1154897629454592998932,
        115771835555968642315,
        408369585962948001943,
        729384347594303327224,
        510275176922080818766,
        684676135201808917861,
        962258719211998029493,
        546450878795363416348,
        697748091946022767486,
        864049756336761841012,
        456904345708204466491,
        822017655558762683230,
        506678682655310616265,
        717781278937001754982,
        1100923392228977331796,
        474658986211977066226,
        1103965240376623546252,
        1053870416855138338996,
        93812853048317556715,
        1030961874582964501948,
        166018678858597159519,
        988601943910865097232,
        1107074343252625716079,
        173837177482820888983,
        312311008449536504002,
        657343512526744252243
    ],
    inv_twiddle_lut_n1: &[
        1u128,
        55137488552566553134,
        782963558044329031162,
        1086451564728023547901,
        543708174403453623763,
        200872111267553793739,
        559516392134303118043,
        555898443033282244666,
        8986619899395396391,
        374468291126457044155,
        1008349527882598588468,
        312467338881068633725,
        676862840789297011873,
        710655141875628378397,
        1058415708288630121519,
        436262533892734885315,
        13825249782211146280,
        301996187385671832043,
        125322492049107508453,
        995334082845451055356,
        1077043977244466917093,
        982688262899198897383,
        448997909481673864258,
        960720533477247529702,
        1177333212293188087105,
        481748644861166755612,
        855004029534859836457,
        752636359703000412619,
        216187178556424128835,
        549273415875182568901,
        368933670375090598801,
        373166617932970114210
    ],
    inv_twiddle_lut_n2: &[
        1u128,
        55137488552566553134,
        782963558044329031162,
        1086451564728023547901,
        543708174403453623763,
        200872111267553793739,
        559516392134303118043,
        555898443033282244666,
        8986619899395396391,
        374468291126457044155,
        1008349527882598588468,
        312467338881068633725,
        676862840789297011873,
        710655141875628378397,
        1058415708288630121519,
        436262533892734885315,
        13825249782211146280,
        301996187385671832043,
        125322492049107508453,
        995334082845451055356,
        1077043977244466917093,
        982688262899198897383,
        448997909481673864258,
        960720533477247529702,
        1177333212293188087105,
        481748644861166755612,
        855004029534859836457,
        752636359703000412619,
        216187178556424128835,
        549273415875182568901,
        368933670375090598801,
        373166617932970114210
    ]
};

const L224_NTT_PARAMS: NttParameters = NttParameters {
    w_primitive: 24679949381292746831263984413215061718,
    w_inv_primitive: 127677392777263148763617266660004723698,
    twiddle_lut_n1: &[
        1u128,
        222903859328157165782523080908760886622,
        202583317316821933056051103864614777634,
        36221737754922176984567252079266655160,
        326176753577984819954093447399487993832,
        9725237799290135537877324337279470076,
        67246846649095695532170248983070452039,
        57964114782339932675673621561632675122,
        41364151852045986021451137467530491334,
        88626540341739145646011577576757520027,
        249519661421906620389285386720998721809,
        278235311199191817302894655993401496187,
        33610652321391144795201962103682071673,
        136496780230062792687749578391696080831,
        78447926684180419835707706950680834880,
        87112597055239913528971923614151658582,
        296087679849856922258380326109087067902,
        273805354441337929197756928411367133703,
        311990504021898541206035805410777933215,
        22622099673276215804164681595787386893,
        214954036225076893054098549385293887641,
        299870226745780940592528159832954967185,
        58051208109789326513748323427210023515,
        60820277048877800385717439214103868294,
        239248299292365461733653293344278524543,
        46267110002249848927675238293497877483,
        275349754169777290263819019806833452852,
        327366105318318282312257854909605853324,
        12232251500689527998491543861539625717,
        94850113186944418688979348749517937732,
        165132338142513657333656780558278397242,
        95467855117459281134493084654635999014
    ],
    twiddle_lut_n2: &[
        1u128,
        183666164396431983104733929206631675188,
        222903859328157165782523080908760886622,
        79303253635891369178621079934275144463,
        202583317316821933056051103864614777634,
        206947981450082710195398282106500190426,
        36221737754922176984567252079266655160,
        134571568169381961141874112718384024556,
        326176753577984819954093447399487993832,
        157711277299701820345436014914364184608,
        9725237799290135537877324337279470076,
        237908333170410478333251823017128896021,
        67246846649095695532170248983070452039,
        192128428248889047419705356362728164639,
        57964114782339932675673621561632675122,
        310224766085874959023671642055861046848,
        41364151852045986021451137467530491334,
        250642866440251566863032569251075144470,
        88626540341739145646011577576757520027,
        171525927235892704581296408146226263987,
        249519661421906620389285386720998721809,
        271161720299750049166928799348398903317,
        278235311199191817302894655993401496187,
        263904847637261499556538082189570506224,
        33610652321391144795201962103682071673,
        306608955222051847172508940368380178361,
        136496780230062792687749578391696080831,
        235696786216075009537110405304672365376,
        78447926684180419835707706950680834880,
        81355995758430106655653395903587204200,
        87112597055239913528971923614151658582,
        79358574312058444628210982386452461460,
        296087679849856922258380326109087067902,
        110112186063489918026733974387185428193,
        273805354441337929197756928411367133703,
        23475026409993483917032663827785850043,
        311990504021898541206035805410777933215,
        336855339255054982296097523478111330802,
        22622099673276215804164681595787386893,
        164435193668786082834514302037745801998,
        214954036225076893054098549385293887641,
        191556605744904916058339740823920117657,
        299870226745780940592528159832954967185,
        185527239053013496774858044599993847358,
        58051208109789326513748323427210023515,
        318122289609082545834578400140186521138,
        60820277048877800385717439214103868294,
        38460383792443828231766097281805894067,
        239248299292365461733653293344278524543,
        30215600527222216878820875124619555029,
        46267110002249848927675238293497877483,
        82404693087512119740802936809365821771,
        275349754169777290263819019806833452852,
        286843136569330562812753814611551748528,
        327366105318318282312257854909605853324,
        285656395315017911566411579125902631712,
        12232251500689527998491543861539625717,
        299309738098777563263761515338015918875,
        94850113186944418688979348749517937732,
        49442522198941460768133473300447365411,
        165132338142513657333656780558278397242,
        254858438566297009011407175038605359586,
        95467855117459281134493084654635999014,
        66738198199269181685345953715780777809
    ],
    inv_twiddle_lut_n1: &[
        1u128,
        283658158683298435140675553619004037984,
        247295776351749633823554733860462715294,
        226155437650029211563403826757545354350,
        204485589547078961570839889534627272525,
        169082910232802468593641346455984448477,
        107942549374852386783910963534365313621,
        248945380110471352279242321925235829364,
        164000758914041429530731884347215575899,
        221454949700425226689031083135353326860,
        157420280847110765888730927218868451081,
        147187093290893249575808369610278481967,
        119453208733166362181404529614648473694,
        137562155343190564608358485578212949353,
        296706226302151317131325315893381558443,
        99235191460223769372579834260162880643,
        107993607099836825113245621640448067946,
        176580862024423500043522923176647698157,
        191294937857344007474537102409991258189,
        20023891973409531455883001148466532111,
        52222444008823037566271456221854733807,
        335451786987659859177557407714602866806,
        98322782476654813011971841242385456820,
        278804278028056878076071993030658048207,
        55361265965724523087496995709904951757,
        256582434823140729935663684925827206519,
        34651673721021887903006009254005236638,
        337183167385633788192013761369538780027,
        265080625671126646364145436038352362127,
        123645571396542975826170443751639162268,
        250073226791152128521927121170292322321,
        245470761121474790835775623672114001039
    ],
    inv_twiddle_lut_n2: &[
        1u128,
        169371906124862297214011445506326830535,
        283658158683298435140675553619004037984,
        303609523716860424508834830973428096070,
        247295776351749633823554733860462715294,
        215770916855422948902998132947062673990,
        226155437650029211563403826757545354350,
        12321467212371518642877843263850595759,
        204485589547078961570839889534627272525,
        219190906777598343375085662179031642640,
        169082910232802468593641346455984448477,
        166555026802329568336979210939121316366,
        107942549374852386783910963534365313621,
        243044314180328528332962109730647285591,
        248945380110471352279242321925235829364,
        228272442165091417399863955697124475693,
        164000758914041429530731884347215575899,
        319372019958032382086940457230738681463,
        221454949700425226689031083135353326860,
        213076575734989017322055426728453124569,
        157420280847110765888730927218868451081,
        224433841057932272429222320496519908288,
        147187093290893249575808369610278481967,
        22593405160527434321461932605507237185,
        119453208733166362181404529614648473694,
        81735860052666846549296848124583543034,
        137562155343190564608358485578212949353,
        87036498830270269254937755944223404230,
        296706226302151317131325315893381558443,
        232389687937253717808298565366633626435,
        99235191460223769372579834260162880643,
        179258337394861675208869260781584031210,
        107993607099836825113245621640448067946,
        21492955834484576208761599255639040767,
        176580862024423500043522923176647698157,
        70398603778225754185027719592249792483,
        191294937857344007474537102409991258189,
        197929683518871774298759479745120938340,
        20023891973409531455883001148466532111,
        268180893407412038884074564855176860528,
        52222444008823037566271456221854733807,
        332187637593480299662705361130454032010,
        335451786987659859177557407714602866806,
        290494934467034056181126302679188734160,
        98322782476654813011971841242385456820,
        293510170314823235090959018724119495279,
        278804278028056878076071993030658048207,
        338809367691272032258189212388817941855,
        55361265965724523087496995709904951757,
        210489262150500989255640875824791097750,
        256582434823140729935663684925827206519,
        296988528337010233132736421728975817655,
        34651673721021887903006009254005236638,
        116647678350394178716700509696340923822,
        337183167385633788192013761369538780027,
        45567759976549361144069291788988560123,
        265080625671126646364145436038352362127,
        173709057591047832507458919131807334187,
        123645571396542975826170443751639162268,
        28966660757190429628025492817827112388,
        250073226791152128521927121170292322321,
        131022266693415781865399742439821723307,
        245470761121474790835775623672114001039,
        10948480354674418273420489062246077248
    ]
};

const L256_NTT_PARAMS: NttParameters = NttParameters {
    w_primitive: 24679949381292746831263984413215061718,
    w_inv_primitive: 127677392777263148763617266660004723698,
    twiddle_lut_n1: &[
        1u128,
        222903859328157165782523080908760886622,
        202583317316821933056051103864614777634,
        36221737754922176984567252079266655160,
        326176753577984819954093447399487993832,
        9725237799290135537877324337279470076,
        67246846649095695532170248983070452039,
        57964114782339932675673621561632675122,
        41364151852045986021451137467530491334,
        88626540341739145646011577576757520027,
        249519661421906620389285386720998721809,
        278235311199191817302894655993401496187,
        33610652321391144795201962103682071673,
        136496780230062792687749578391696080831,
        78447926684180419835707706950680834880,
        87112597055239913528971923614151658582,
        296087679849856922258380326109087067902,
        273805354441337929197756928411367133703,
        311990504021898541206035805410777933215,
        22622099673276215804164681595787386893,
        214954036225076893054098549385293887641,
        299870226745780940592528159832954967185,
        58051208109789326513748323427210023515,
        60820277048877800385717439214103868294,
        239248299292365461733653293344278524543,
        46267110002249848927675238293497877483,
        275349754169777290263819019806833452852,
        327366105318318282312257854909605853324,
        12232251500689527998491543861539625717,
        94850113186944418688979348749517937732,
        165132338142513657333656780558278397242,
        95467855117459281134493084654635999014
    ],
    twiddle_lut_n2: &[
        1u128,
        183666164396431983104733929206631675188,
        222903859328157165782523080908760886622,
        79303253635891369178621079934275144463,
        202583317316821933056051103864614777634,
        206947981450082710195398282106500190426,
        36221737754922176984567252079266655160,
        134571568169381961141874112718384024556,
        326176753577984819954093447399487993832,
        157711277299701820345436014914364184608,
        9725237799290135537877324337279470076,
        237908333170410478333251823017128896021,
        67246846649095695532170248983070452039,
        192128428248889047419705356362728164639,
        57964114782339932675673621561632675122,
        310224766085874959023671642055861046848,
        41364151852045986021451137467530491334,
        250642866440251566863032569251075144470,
        88626540341739145646011577576757520027,
        171525927235892704581296408146226263987,
        249519661421906620389285386720998721809,
        271161720299750049166928799348398903317,
        278235311199191817302894655993401496187,
        263904847637261499556538082189570506224,
        33610652321391144795201962103682071673,
        306608955222051847172508940368380178361,
        136496780230062792687749578391696080831,
        235696786216075009537110405304672365376,
        78447926684180419835707706950680834880,
        81355995758430106655653395903587204200,
        87112597055239913528971923614151658582,
        79358574312058444628210982386452461460,
        296087679849856922258380326109087067902,
        110112186063489918026733974387185428193,
        273805354441337929197756928411367133703,
        23475026409993483917032663827785850043,
        311990504021898541206035805410777933215,
        336855339255054982296097523478111330802,
        22622099673276215804164681595787386893,
        164435193668786082834514302037745801998,
        214954036225076893054098549385293887641,
        191556605744904916058339740823920117657,
        299870226745780940592528159832954967185,
        185527239053013496774858044599993847358,
        58051208109789326513748323427210023515,
        318122289609082545834578400140186521138,
        60820277048877800385717439214103868294,
        38460383792443828231766097281805894067,
        239248299292365461733653293344278524543,
        30215600527222216878820875124619555029,
        46267110002249848927675238293497877483,
        82404693087512119740802936809365821771,
        275349754169777290263819019806833452852,
        286843136569330562812753814611551748528,
        327366105318318282312257854909605853324,
        285656395315017911566411579125902631712,
        12232251500689527998491543861539625717,
        299309738098777563263761515338015918875,
        94850113186944418688979348749517937732,
        49442522198941460768133473300447365411,
        165132338142513657333656780558278397242,
        254858438566297009011407175038605359586,
        95467855117459281134493084654635999014,
        66738198199269181685345953715780777809
    ],
    inv_twiddle_lut_n1: &[
        1u128,
        283658158683298435140675553619004037984,
        247295776351749633823554733860462715294,
        226155437650029211563403826757545354350,
        204485589547078961570839889534627272525,
        169082910232802468593641346455984448477,
        107942549374852386783910963534365313621,
        248945380110471352279242321925235829364,
        164000758914041429530731884347215575899,
        221454949700425226689031083135353326860,
        157420280847110765888730927218868451081,
        147187093290893249575808369610278481967,
        119453208733166362181404529614648473694,
        137562155343190564608358485578212949353,
        296706226302151317131325315893381558443,
        99235191460223769372579834260162880643,
        107993607099836825113245621640448067946,
        176580862024423500043522923176647698157,
        191294937857344007474537102409991258189,
        20023891973409531455883001148466532111,
        52222444008823037566271456221854733807,
        335451786987659859177557407714602866806,
        98322782476654813011971841242385456820,
        278804278028056878076071993030658048207,
        55361265965724523087496995709904951757,
        256582434823140729935663684925827206519,
        34651673721021887903006009254005236638,
        337183167385633788192013761369538780027,
        265080625671126646364145436038352362127,
        123645571396542975826170443751639162268,
        250073226791152128521927121170292322321,
        245470761121474790835775623672114001039
    ],
    inv_twiddle_lut_n2: &[
        1u128,
        169371906124862297214011445506326830535,
        283658158683298435140675553619004037984,
        303609523716860424508834830973428096070,
        247295776351749633823554733860462715294,
        215770916855422948902998132947062673990,
        226155437650029211563403826757545354350,
        12321467212371518642877843263850595759,
        204485589547078961570839889534627272525,
        219190906777598343375085662179031642640,
        169082910232802468593641346455984448477,
        166555026802329568336979210939121316366,
        107942549374852386783910963534365313621,
        243044314180328528332962109730647285591,
        248945380110471352279242321925235829364,
        228272442165091417399863955697124475693,
        164000758914041429530731884347215575899,
        319372019958032382086940457230738681463,
        221454949700425226689031083135353326860,
        213076575734989017322055426728453124569,
        157420280847110765888730927218868451081,
        224433841057932272429222320496519908288,
        147187093290893249575808369610278481967,
        22593405160527434321461932605507237185,
        119453208733166362181404529614648473694,
        81735860052666846549296848124583543034,
        137562155343190564608358485578212949353,
        87036498830270269254937755944223404230,
        296706226302151317131325315893381558443,
        232389687937253717808298565366633626435,
        99235191460223769372579834260162880643,
        179258337394861675208869260781584031210,
        107993607099836825113245621640448067946,
        21492955834484576208761599255639040767,
        176580862024423500043522923176647698157,
        70398603778225754185027719592249792483,
        191294937857344007474537102409991258189,
        197929683518871774298759479745120938340,
        20023891973409531455883001148466532111,
        268180893407412038884074564855176860528,
        52222444008823037566271456221854733807,
        332187637593480299662705361130454032010,
        335451786987659859177557407714602866806,
        290494934467034056181126302679188734160,
        98322782476654813011971841242385456820,
        293510170314823235090959018724119495279,
        278804278028056878076071993030658048207,
        338809367691272032258189212388817941855,
        55361265965724523087496995709904951757,
        210489262150500989255640875824791097750,
        256582434823140729935663684925827206519,
        296988528337010233132736421728975817655,
        34651673721021887903006009254005236638,
        116647678350394178716700509696340923822,
        337183167385633788192013761369538780027,
        45567759976549361144069291788988560123,
        265080625671126646364145436038352362127,
        173709057591047832507458919131807334187,
        123645571396542975826170443751639162268,
        28966660757190429628025492817827112388,
        250073226791152128521927121170292322321,
        131022266693415781865399742439821723307,
        245470761121474790835775623672114001039,
        10948480354674418273420489062246077248
    ]
};


/// 각 보안 수준에 맞는 파라미터 세트를 담는 구조체입니다.
#[derive(Debug, Clone)]
pub struct QfheParameters<'a> {
    pub polynomial_degree: usize,
    pub log2_of_polynomial_degree: usize,
    pub modulus_q: u128,
    pub modulus_chain: &'a [u128],
    pub plaintext_modulus: u128,
    pub scaling_factor_delta: u128,
    pub noise_std_dev: f64,
    pub module_dimension_k: usize,
    pub gadget_base_b: u128,
    pub gadget_levels_l: usize,
    pub ntt_params: NttParameters,
}

#[derive(Debug, Clone)]
pub struct QfheIntermediateParameters {
    pub polynomial_degree: usize,
    pub log2_of_polynomial_degree: usize,
    pub modulus_q: u128,
    pub plaintext_modulus: u128,
    pub scaling_factor_delta: u128,
    pub noise_std_dev: f64,
    pub module_dimension_k: usize,
    pub gadget_base_b: u128,
    pub gadget_levels_l: usize,
}

impl QfheIntermediateParameters {
    pub const fn get_full_params(self, level: &SecurityLevel) -> QfheParameters<'static> {
        QfheParameters {
            ntt_params: self.get_ntt_params(level),
            polynomial_degree: self.polynomial_degree,
            log2_of_polynomial_degree: self.log2_of_polynomial_degree,
            modulus_q: self.modulus_q,
            modulus_chain: level.get_modulus_chain(),
            plaintext_modulus: self.plaintext_modulus,
            scaling_factor_delta: self.scaling_factor_delta,
            noise_std_dev: self.noise_std_dev,
            module_dimension_k: self.module_dimension_k,
            gadget_base_b: self.gadget_base_b,
            gadget_levels_l: self.gadget_levels_l,
        }
    }

    // 주어진 QfheParameters에 맞춰 NTT 파라미터를 계산
    pub const fn get_ntt_params(&self, level: &SecurityLevel) -> NttParameters {
        match level {
            SecurityLevel::L128 => L128_NTT_PARAMS,
            SecurityLevel::L160 => L160_NTT_PARAMS,
            SecurityLevel::L192 => L192_NTT_PARAMS,
            SecurityLevel::L224 => L224_NTT_PARAMS,
            SecurityLevel::L256 => L256_NTT_PARAMS
        }
    }

}

#[derive(Debug, Clone)]
pub struct QfheMinimalParameters {
    pub log2_of_polynomial_degree: usize,
    pub modulus_q: u128,
    pub plaintext_modulus: u128,
    pub scaling_factor_delta: u128,
    pub noise_std_dev: f64,
    pub module_dimension_k: usize,
    pub gadget_base_b: u128,
    pub gadget_levels_l: usize,
}

impl QfheMinimalParameters {
    pub const fn get_intermediate_params(self) -> QfheIntermediateParameters {
        let one: usize = 1;
        QfheIntermediateParameters {
            polynomial_degree: (one << self.log2_of_polynomial_degree),
            log2_of_polynomial_degree: self.log2_of_polynomial_degree,
            modulus_q: self.modulus_q,
            plaintext_modulus: self.plaintext_modulus,
            scaling_factor_delta: self.scaling_factor_delta,
            noise_std_dev: self.noise_std_dev,
            module_dimension_k: self.module_dimension_k,
            gadget_base_b: self.gadget_base_b,
            gadget_levels_l: self.gadget_levels_l,
        }
    }
}

impl SecurityLevel {
    pub const fn get_modulus_chain(&self) -> &'static [u128; 2] {
        match self {
            SecurityLevel::L128 => &[1125899906842597, 1099511627749], // 50-bit, 40-bit primes
            SecurityLevel::L160 => &[1152921504606846883, 1125899906842597], // ~60-bit, 50-bit primes
            SecurityLevel::L192 => &[1152921504606846883, 1125899906842597], // ~60-bit, 50-bit primes
            SecurityLevel::L224 => &[340282366920938463463374607431768210431, // ~128-bit
                                    170141183460469231731687303715884105727], // ~127-bit
            SecurityLevel::L256 => &[340282366920938463463374607431768210431, // ~128-bit
                                    170141183460469231731687303715884105727]  // ~127-bit
        }
    }

    /// 선택된 보안 수준에 맞는 MLWE 파라미터 세트를 반환합니다.
    /// 이 파라미터들은 표준 FHE 및 PQC 문헌을 참고한 예시 값입니다.
    pub fn get_params(&self) -> QfheParameters<'static> {
        match self {
            // 128-bit quantum security (NIST Level 1)
            SecurityLevel::L128 => QfheMinimalParameters {
                module_dimension_k: 2,
                log2_of_polynomial_degree: 10,
                modulus_q: 1152921504606846883, // ~60-bit prime
                plaintext_modulus: 1 << 32,
                scaling_factor_delta: 1152921504606846883 / (1 << 32),
                noise_std_dev: 3.2,
                gadget_base_b: 1 << 8,
                gadget_levels_l: 8, // 8 levels * 8 bits = 64 bits coverage
            },
            // ~160-bit quantum security (Intermediate)
            SecurityLevel::L160 => QfheMinimalParameters {
                module_dimension_k: 2,
                log2_of_polynomial_degree: 10,
                modulus_q: 1180591620717411303423, // ~70-bit prime
                plaintext_modulus: 1 << 32,
                scaling_factor_delta: 1180591620717411303423 / (1 << 32),
                noise_std_dev: 3.2,
                gadget_base_b: 1 << 8,
                gadget_levels_l: 9, // 9 levels * 8 bits = 72 bits coverage
            },
            // 192-bit quantum security (NIST Level 3)
            SecurityLevel::L192 => QfheMinimalParameters {
                module_dimension_k: 3,
                log2_of_polynomial_degree: 10,
                modulus_q: 1180591620717411303423, // ~70-bit prime
                plaintext_modulus: 1 << 32,
                scaling_factor_delta: 1180591620717411303423 / (1 << 32),
                noise_std_dev: 3.2,
                gadget_base_b: 1 << 8,
                gadget_levels_l: 9, // 9 levels * 8 bits = 72 bits coverage
            },
            // ~224-bit quantum security (Intermediate)
            SecurityLevel::L224 => QfheMinimalParameters {
                module_dimension_k: 3,
                log2_of_polynomial_degree: 11,
                modulus_q: 340282366920938463463374607431768211293, // 125-bit prime
                plaintext_modulus: 1 << 64,
                scaling_factor_delta: 340282366920938463463374607431768211293 / (1 << 64),
                noise_std_dev: 3.2,
                gadget_base_b: 1 << 8,
                gadget_levels_l: 16, // 16 levels * 8 bits = 128 bits coverage
            },
            // 256-bit quantum security (NIST Level 5)
            SecurityLevel::L256 => QfheMinimalParameters {
                module_dimension_k: 4,
                log2_of_polynomial_degree: 11,
                modulus_q: 340282366920938463463374607431768211293, // 125-bit prime
                plaintext_modulus: 1 << 64,
                scaling_factor_delta: 340282366920938463463374607431768211293 / (1 << 64),
                noise_std_dev: 3.2,
                gadget_base_b: 1 << 8,
                gadget_levels_l: 16, // 16 levels * 8 bits = 128 bits coverage
            }
        }.get_intermediate_params().get_full_params(self)
    }
}



/// LWE 암호문은 (a, b) 쌍으로 구성됩니다.
/// a는 4원수들의 벡터이고, b는 단일 4원수입니다.
#[derive(Clone, Debug)]
pub struct Ciphertext {
    pub a_vec: Vec<Polynomial>, // k개의 다항식 벡터
    pub b: Polynomial,          // 1개의 다항식
    pub modulus_level: usize,   // 현재 모듈러스 레벨 추적 필드
}

/// GGSW 암호문은 부트스트래핑의 핵심 요소입니다.
#[derive(Clone, Debug)]
pub struct GgswCiphertext {
    pub levels: Vec<Ciphertext>,
}

/// 암호화, 복호화, 동형 연산을 위한 핵심 트레이트(trait)입니다.
pub trait QfheEngine {
    fn encrypt(&self, message: u64) -> Ciphertext;
    fn decrypt(&self, ciphertext: &Ciphertext) -> u64;
    fn homomorphic_add(&self, ct1: &Ciphertext, ct2: &Ciphertext) -> Ciphertext;
    fn homomorphic_sub(&self, ct1: &Ciphertext, ct2: &Ciphertext) -> Ciphertext;

    fn homomorphic_mul(&self, ct1: &Ciphertext, ct2: &Ciphertext) -> Ciphertext;
    fn bootstrap(&self, ct: &Ciphertext, test_poly: &Polynomial) -> Ciphertext;

    fn modulus_switch(&self, ct: &Ciphertext) -> Ciphertext;
}
